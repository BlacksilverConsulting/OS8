---
- name: PostgreSQL 13 Client and Server
  hosts: localhost
  remote_user: root
  
# IF YOU NEED A DIFFERENT CLUSTER LOCATION, AFTER THIS PLAYBOOK, SEE:
# https://gist.github.com/BlacksilverConsulting/cf4789bb2457ca4f56f65d4ebad5c9ab

  tasks:
  # We use PostgreSQL 13 from the OS repo here instead of PGDG, so 
  # that it also works on locked-down RHEL installations.

  - name: Install PostgreSQL 13 client
    yum:
      name: "postgresql13"
      state: latest
      update_cache: yes

  - name: Create PostgreSQL client system-wide configuration directory
    # This is needed for the CLI configuration file that is 
    #  about to be installed
    file:
      path: /etc/sysconfig/pgsql
      state: directory
      group: root
      owner: root
      mode: 0755

  - name: Configure PostgreSQL client CLI
    # This makes psql much nicer to work with, things like
    #  persistent history and a special symbol (Â¤) for nulls
    # This pulls directly from GitHub instead of expecting /root/ImgOverlay-main
    #  to already exist, so this playbook is not dependent on dm.yaml.
    get_url:
      url: https://github.com/BlacksilverConsulting/OS8/raw/main/psqlrc
      dest: /etc/sysconfig/pgsql/psqlrc
      mode: 0644
      group: root
      owner: root

  - name: Install PostgreSQL 13 server
    yum:
      name: "@postgresqldbserver13"
      state: latest
      disablerepo: appstream

  - name: Add PostgreSQL 13 service dependency on autofs
    # This is needed for configurations where the DB cluster
    #  is on a disk that is mounted by autofs
    ini_file:
      path: /etc/systemd/system/postgresql-13.service.d/override.conf
      section: Unit
      option: after
      value: "autofs.service"
      no_extra_spaces: yes

  - name: Add cronjob to vacuum databases regularly
    # This is needed to comfort grumpy old DBAs that don't 
    #  trust autovacuum yet
    cron:
      name: "Nightly database vacuum"
      special_time: daily
      user: postgres
      job: >
        /bin/bash -c 'for db in $(/bin/psql -AqtX -U postgres -d postgres -c "SELECT datname FROM pg_Database WHERE datAllowConn;"); do /bin/psql -q -d $db -c "VACUUM ANALYZE;"; done'

  - name: Install Python 3.9 module for PostgreSQL
    # This is needed for community.postgresql to work
    yum:
      name: "python39-psycopg2"
      state: latest

  - name: Add Ansible support for PostgreSQL configuration
    # This is needed for dm.yaml to create application-specific
    #  database users
    community.general.ansible_galaxy_install:
      name: community.postgresql
      type: collection

  - name: Check if PostgreSQL cluster is initialized
    ansible.builtin.stat:
      path: /var/lib/pgsql/13/data/pg_hba.conf
    register: pg13data

  - name: Initialize PostgreSQL cluster
    shell: "postgresql-13-setup initdb"
    when: not pg13data.stat.exists
 
  - name: Start and enable PostgreSQL service
    service: 
      name: postgresql-13 
      state: started 
      enabled: yes

...
